#!/usr/bin/env perl
use warnings;
use strict;
use lib '/opt/reader/lib';

use Getopt::Long;
use XML::XPath;
use Reader::Model;

my $verbose;
GetOptions(
    'v|verbose'     => \$verbose,
) or die 'Invalid options';

binmode STDIN, ':encoding(UTF-8)';
binmode STDERR, ':encoding(UTF-8)';

my $xpath = XML::XPath->new( ioref => \*STDIN );

my $title = $xpath->getNodeText('/opml/head/title');
print STDERR "loading subscriptions from '$title'\n" if $verbose;

my $model = Reader::Model::model();

my $subscription_count = 0;
my $subscriptions = $xpath->find('//outline[@type="rss"]');
foreach my $context ($subscriptions->get_nodelist) {
    my $uri     = $xpath->find('./@xmlUrl', $context)->string_value;
    my $link    = $xpath->find('./@htmlUrl', $context)->string_value;
    my $title   = $xpath->find('./@title', $context)->string_value;

    print STDERR "adding description '$title'\n" if $verbose;
    add_feed($model, $uri, $title, $link);

    $subscription_count++;
}

print STDERR "added $subscription_count subcriptions\n" if $verbose;

sub add_feed {
    my ($model, $uri, $link, $title) = @_;

    my $feed = $model->resultset('Feed')->create({
        uri         => $uri,
        title       => $title,
        link        => $link,
        description => $title,
        author      => '',
    });
}

=head1 NAME

greader_import - Import google reader subscriptions

=head1 USAGE

greader_import [--verbose] < subscriptions.xml

=head1 OPTIONS

=over 4

=item --verbose

Optional. Lists subscriptions added on std err.

=back

=head1 DETAILS

=over 4

=item * assumes each feed is not presently in the database

=cut
